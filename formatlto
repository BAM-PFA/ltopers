#!/bin/bash
# formatlto
# formats an LTO tape for LTFS

if [ ! ${LTO_ARRAY} ] ; then
    if [[ $(uname -s) == "Darwin" ]] ; then
        LTO_ARRAY=($(system_profiler SPSASDataType | grep "SCSI Target Identifier" | cut -d : -f2 | xargs)) # try to figure out how many lto decks are attached
    else
        LTO_ARRAY=(0) # to do: itemize when there are multiple lto drives in Linux
    fi
fi

RED="$(tput setaf 1)"   # Red      - For Warnings
GREEN="$(tput setaf 2)" # Green    - For Declarations
BLUE="$(tput setaf 4)"  # Blue     - For Questions
NC="$(tput sgr0)"       # No Color

if [[ "${#LTO_ARRAY[@]}" -gt 1 ]] ; then
   PS3="${BLUE}Which LTO deck?${NC} "
   eval set "${LTO_ARRAY[@]}"
   select deck in "$@"
   do
       break
   done
   if [ ! $deck ] ; then
       echo "${RED}Error, you selected an invalid deck.${NC}"
       exit 1
   fi
else
   deck=0
fi

printf "${BLUE}Enter the 6 character tape number:${NC} "
read tapeid
if [[ ! $(echo "$tapeid" | grep -E  "^[A-Z0-9]{6}$") ]] ; then
   echo "${RED}ERROR The tape id must contain exactly 6 capital letters and/or numbers.${NC}"
   exit 1
fi
if [ $(which ltfs_ldun) ] ; then
    ltfs_ldun load $deck
fi
mkltfs --device=$deck --tape-serial="$tapeid" --no-compression -r "size=5M/name=*txt:*.xml:*.jpg:*.log:*.json:*.framemd5:*.scc" --volume-name="$tapeid"
if [ $(which ltfs_ldun) ] ; then
    ltfs_ldun unload $deck
fi
