#!/bin/bash
# This script presumes that you've setup a filemaker database with Filemaker Server using two tables called "lto_tapes" and "lto_files" with fields according to the LTFS XML format.
REQUIRECONFIG="Y"
SCRIPTDIR=$(dirname "${0}")
. "${SCRIPTDIR}/ltofunctions" || { echo "Missing '${SCRIPTDIR}/ltofunctions'. Exiting." ; exit 1 ;};


LTO_TAPE_TMP=$(_maketemp)
xml sel -t -m "/ltfsindex" -o " --data-urlencode \"creator=" -v creator -o "\" --data-urlencode \"volumeuuid=" -v volumeuuid -o "\" --data-urlencode \"generationnumber=" -v generationnumber -o "\" --data-urlencode \"accesstime=" -v directory[1]/accesstime -o "\" --data-urlencode \"backuptime=" -v directory[1]/backuptime -o "\" --data-urlencode \"changetime=" -v directory[1]/changetime -o "\" --data-urlencode \"creationtime=" -v directory[1]/creationtime -o "\" --data-urlencode \"modifytime=" -v directory[1]/modifytime -o "\" --data-urlencode \"updatetime=" -v updatetime -o "\" --data-urlencode \"readonly=" -v directory[1]/readonly -o "\" --data-urlencode \"allowpolicyupdate=" -v allowpolicyupdate -o "\" --data-urlencode \"highestfileuid=" -v highestfileuid -o "\" --data-urlencode \"name=" -v directory[1]/name -o "\" --data-urlencode \"uniq=" -v directory[1]/modifytime -o "." -v directory[1]/highestfileuid -o "." -v volumeuuid -o "." -v updatetime -o "\"" -n "$1" > "$LTO_TAPE_TMP"

while read tape ; do
    if [[ "$tape" ]] ; then
        tapecmd="curl -s -S -G $tape \"http://${FILEMAKER_XML_URL}?-db=${FILEMAKER_DB}&-lay=lto_tapes&-new\" 1>/dev/null"
        tapeid=$(echo "$tape" | grep -o "name=[^ ]*" | sed 's/"//g')
        echo "Uploading tape metadata for tape $tapeid. Please wait…"
        eval "$tapecmd"
    fi
done < "$LTO_TAPE_TMP"
echo "Uploading file metadata for tape $tapeid. Please wait…"

LTO_FILE_TMP=$(_maketemp)
xml sel -t -m ".//file" -o " --data-urlencode \"name=" -v name -o "\" --data-urlencode \"length=" -v "length" -o "\" --data-urlencode \"path=" -m "ancestor-or-self::directory" -v "name" -o "/" -b -v name -o "\" --data-urlencode \"readonly=" -v readonly -o "\" --data-urlencode \"creationtime=" -v creationtime -o "\" --data-urlencode \"changetime=" -v changetime -o "\" --data-urlencode \"modifytime=" -v modifytime -o "\" --data-urlencode \"accesstime=" -v accesstime -o "\" --data-urlencode \"backuptime=" -v backuptime -o "\" --data-urlencode \"fileuid=" -v fileuid -o "\" --data-urlencode \"uniq=" -v fileuid -o "." -v modifytime -o "." -v length -o "." -v name -o "\"" -n "$1" > "$LTO_FILE_TMP"

while read file ; do
    if [[ "$file" ]] ; then
        filecmd="curl -s -S -G $file \"http://${FILEMAKER_XML_URL}?-db=${FILEMAKER_DB}&-lay=lto_files&-new\" 1>/dev/null"
        eval "$filecmd"
    fi
done < "$LTO_FILE_TMP"
echo "Done uploading metadata for $tapeid."
