#!/bin/bash
# name: writelto
# description: writelto writes the contents of a specified directory onto a mounted LTFS-formated LTO tape.
hiddenfiles=""
TAPE_MOUNT_POINT="/Volumes"
TAPE_SERIAL_REGEX="[A-Z0-9]\{6\}"
LTOLOGS="$HOME/Documents/lto_indexes"
SCRIPTDIR=$(dirname "${0}")
. "${SCRIPTDIR}/ltofunctions" || { echo "Missing '${SCRIPTDIR}/ltofunctions'. Exiting." ; exit 1 ;};

_usage(){
    echo "writelto"
    echo "Usage:"
    echo "    -t tape serial"
    exit 1
}

# command-line options
OPTIND=1
while getopts ":t:" opt ; do
    case "${opt}" in
        t) TAPE_SERIAL="${OPTARG}" ;;
        *) echo "bad option -${OPTARG}" ; usage ;;
        :) echo "Option -${OPTARG} requires an argument" ; exit 1 ;;
    esac
done
shift $(( ${OPTIND} - 1 ))


SOURCE_DIR="${1}"
if [[ ! $(echo "${TAPE_SERIAL}" | grep "$TAPE_SERIAL_REGEX") ]] ; then
    echo "${TAPE_SERIAL}" is not a capital letter followed by a 5 digit number
    usage
    exit 1
fi

TAPE_PATH="${TAPE_MOUNT_POINT}/${TAPE_SERIAL}"

_checkdir "${SOURCE_DIR}"
# remove .DS_Store files
find "${SOURCE_DIR}/" -name '.DS_Store' -type f -delete

_checkdir "${TAPE_PATH}"

rsync -rtvO --progress "${SOURCE_DIR}/" "${TAPE_PATH}"
RSYNC_ERR_1="$?"
hiddenfiles=$(find "${TAPE_PATH}" -name ".*")
if [[ "${hiddenfiles}" ]] ; then
	echo "Removing hidden files from tape."
	find "${TAPE_PATH}" -name ".*" -delete
	rsync -rtvO --progress "${SOURCE_DIR}/" "${TAPE_PATH}"
	RSYNC_ERR_2="$?"
fi
umount "${TAPE_PATH}"
echo "rsync exited with $RSYNC_ERR_1 on the first pass and $RSYNC_ERR_2 on the second pass."
echo "rsync exited with $RSYNC_ERR_1 on the first pass and $RSYNC_ERR_2 on the second pass." >> "${HOME}/Documents/${TAPE_SERIAL}_writelto.txt"

schemafile="$LTOLOGS/${TAPE_SERIAL}.schema"
if [[ -n "${FILEMAKER_XML_URL}" ]] ; then
    "${SCRIPTDIR}/lto2filemaker" "${schemafile}"
fi
