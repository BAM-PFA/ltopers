#!/bin/bash
# name: writelto
# description: writelto writes the contents of a specified directory onto a mounted LTFS-formated LTO tape.
HIDDEN_FILES=""
TAPE_MOUNT_POINT="/Volumes"
TAPE_SERIAL_REGEX="[A-Z0-9]\{6\}"
LTO_LOGS="$HOME/Documents/lto_indexes"
SCRIPTDIR=$(dirname "${0}")
TAPE_EJECT="Y"

_usage(){
    echo "writelto"
    echo "Usage:"
    echo "    -t tape serial"
    echo "    -e [ N|Y ] (state yes or no to ejecting the tape after write, default is yes)"
    exit 1
}

. "${SCRIPTDIR}/mmfunctions" || { echo "Missing '${SCRIPTDIR}/mmfunctions'. Exiting." ; exit 1 ;};

# command-line options
OPTIND=1
while getopts ":t:e:" opt ; do
    case "${opt}" in
        t) TAPE_SERIAL="${OPTARG}" ;;
        e) TAPE_EJECT="${OPTARG}" ;;
        *) echo "bad option -${OPTARG}" ; usage ;;
        :) echo "Option -${OPTARG} requires an argument" ; exit 1 ;;
    esac
done
shift $(( ${OPTIND} - 1 ))


SOURCE_DIR="${1}"
if [[ ! $(echo "${TAPE_SERIAL}" | grep "${TAPE_SERIAL_REGEX}") ]] ; then
    echo "${TAPE_SERIAL}" is not a capital letter followed by a 5 digit number
    usage
    exit 1
fi

TAPE_PATH="${TAPE_MOUNT_POINT}/${TAPE_SERIAL}"

_checkdir "${SOURCE_DIR}"
# remove .DS_Store files
find "${SOURCE_DIR}/" -name '.DS_Store' -type f -delete

_checkdir "${TAPE_PATH}"

"${SCRIPTDIR}/migratefiles" -o "${TAPE_PATH}" "${SOURCE_DIR}/"
RSYNC_ERR_1="$?"
HIDDEN_FILES=$(find "${TAPE_PATH}" -name ".*")
if [[ "${HIDDEN_FILES}" ]] ; then
    echo "Removing hidden files from tape."
    find "${TAPE_PATH}" -name ".*" -delete
    "${SCRIPTDIR}/migratefiles" -o "${TAPE_PATH}" "${SOURCE_DIR}/"
    RSYNC_ERR_2="$?"
fi
case "${TAPE_EJECT}" in
    y|Y) umount "${TAPE_PATH}" ;;
    *) echo "Done writing but not ejecting ${TAPE_SERIAL}." ;;
esac

echo "rsync exited with ${RSYNC_ERR_1} on the first pass and ${RSYNC_ERR_2} on the second pass."
echo "rsync exited with ${RSYNC_ERR_1} on the first pass and ${RSYNC_ERR_2} on the second pass." >> "${HOME}/Documents/${TAPE_SERIAL}_writelto.txt"

renameschemas -u

SCHEMA_FILE="$LTO_LOGS/${TAPE_SERIAL}.schema"
if [[ -n "${FILEMAKER_XML_URL}" ]] ; then
    "${SCRIPTDIR}/lto2filemaker" "${SCHEMA_FILE}"
fi
