#!/usr/bin/env bash

# renameschemas

SCRIPTDIR=$(dirname "${0}")

. "${SCRIPTDIR}/mmfunctions" || { echo "Missing '${SCRIPTDIR}/mmfunctions'. Exiting." ; exit 1 ; }

_usage(){
    echo
    echo "$(basename "${0}")"
    echo "Currently this script only works with in -u mode. It finds all .schema"
    echo "LTFS indexes in the LTO_LOGS directory and renames them to use the"
    echo "top-level file system directory name rather than the uuid. Any"
    echo "conflicting filenames are moved to another folder if needed."
    echo "Usage: $(basename "${0}") -u"
    echo "  -u  change dir-named schema files to the tape uuid"
    echo
    exit 1
}

[ "${#}" = 0 ] && _usage

OPTIND=1
while getopts ":un" opt ; do
    case "${opt}" in
        u) RENAME2UUID="Y" ;;
        n) RENAME2NAME="Y" ;;
        :) echo "Error: Option -${OPTARG} requires an argument" ; exit 1 ;;
        *) echo "Error: Bad option -${OPTARG}" ; usage ;;
    esac
done
shift $(( ${OPTIND} - 1 ))

LTO_LOGS="${HOME}/Documents/lto_indexes"
OLD_LOGS="${LTO_LOGS}/old/"

if [[ ! -d "${OLD_LOGS}" ]] ; then
    mkdir -p "${OLD_LOGS}"
fi

if [[ "${RENAME2UUID}" = "Y" ]] ; then
    ls -1t "${LTO_LOGS}" | grep "[0-9a-f]\{8\}-[0-9a-f]\{4\}-[0-9a-f]\{4\}-[0-9a-f]\{4\}-[0-9a-f]\{12\}.schema" | while read UUID_NAME ; do
        UUID_PATH="${LTO_LOGS}/${UUID_NAME}"
        NAME_PATH="${LTO_LOGS}/$(xml sel -t -m "/ltfsindex" -v directory[1]/name "${LTO_LOGS}/${UUID_NAME}").schema"
        if [[ -f "${NAME_PATH}" ]] ; then
            UUID_UPDATETIME=$(xml sel -t -m "/ltfsindex" -v updatetime "${UUID_PATH}")
            NAME_UPDATETIME=$(xml sel -t -m "/ltfsindex" -v updatetime "${NAME_PATH}")
            if [[ "$UUID_UPDATETIME" < "$NAME_UPDATETIME" ]] ; then
                mv -v "${UUID_PATH}" "${OLD_LOGS}"
            else
                mv -v "${NAME_PATH}" "${OLD_LOGS}"
                mv -v -n "${UUID_PATH}" "${NAME_PATH}"
            fi
        else
            mv -v -n "${UUID_PATH}" "${NAME_PATH}"
        fi
    done
fi
